{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.jsx","components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","Controls","onIncrement","onDecrement","type","onClick","Value","value","Counter","state","props","initialValue","handleIncrement","setState","prevState","handleDecrement","this","Component","defaultProps","Dropdown","visible","toggle","ColorPicker","activeOptionIdx","setActiveIdx","index","makeOptionClassName","optionClasses","push","join","options","label","map","color","style","backgroundColor","colorPickerOptions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,UAAY,+B,6KCGfC,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,K,4BCSxDG,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,YAAhB,OACf,sBAAKJ,UAAU,oBAAf,UACE,wBAAQK,KAAK,SAASC,QAASH,EAA/B,iBAGA,wBAAQE,KAAK,SAASC,QAASF,EAA/B,qBCDWG,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMR,UAAU,iBAAhB,SAAkCQ,KCGzDC,G,kNASJC,MAAQ,CACNF,MAAO,EAAKG,MAAMC,c,EAGpBC,gBAAkB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUP,MAAQ,O,EAI7BQ,gBAAkB,WAChB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUP,MAAQ,O,4CAI7B,WAAU,IACAA,EAAUS,KAAKP,MAAfF,MAER,OACE,sBAAKR,UAAU,UAAf,UACE,cAAC,EAAD,CAAOQ,MAAOA,IACd,cAAC,EAAD,CACEL,YAAac,KAAKJ,gBAClBT,YAAaa,KAAKD,yB,GAjCNE,cAAhBT,EACGU,aAAe,CACpBP,aAAc,GAsCHH,QCZAW,G,kNA7BbV,MAAQ,CACNW,SAAS,G,EAGXC,OAAS,WACP,EAAKR,UAAS,SAAAC,GAAS,MAAK,CAC1BM,SAAUN,EAAUM,a,4CAIxB,WAAU,IACAA,EAAYJ,KAAKP,MAAjBW,QAER,OACE,sBAAKrB,UAAU,WAAf,UACE,wBACEK,KAAK,SACLL,UAAU,mBACVM,QAASW,KAAKK,OAHhB,SAKGD,EAAU,OAAS,SAGrBA,GAAW,qBAAKrB,UAAU,iBAAf,mC,GAxBGkB,cC2CRK,G,kNA1Cbb,MAAQ,CACNc,gBAAiB,G,EAGnBC,aAAe,SAAAC,GACb,EAAKZ,SAAS,CAAEU,gBAAiBE,K,EAGnCC,oBAAsB,SAAAD,GACpB,IAAME,EAAgB,CAAC,uBAMvB,OAJIF,IAAU,EAAKhB,MAAMc,iBACvBI,EAAcC,KAAK,+BAGdD,EAAcE,KAAK,M,4CAG5B,WAAU,IAAD,OACCN,EAAoBP,KAAKP,MAAzBc,gBACAO,EAAYd,KAAKN,MAAjBoB,QACAC,EAAUD,EAAQP,GAAlBQ,MAER,OACE,sBAAKhC,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,0BACA,8BACG+B,EAAQE,KAAI,WAAmBP,GAAnB,IAAGM,EAAH,EAAGA,MAAOE,EAAV,EAAUA,MAAV,OACX,wBAEElC,UAAW,EAAK2B,oBAAoBD,GACpCS,MAAO,CAAEC,gBAAiBF,GAC1B5B,QAAS,kBAAM,EAAKmB,aAAaC,KAH5BM,QAOP,oBAAGhC,UAAU,qBAAb,6BAAmDgC,Y,GArCrCd,cCGpBmB,G,MAAqB,CACzB,CAAEL,MAAO,MAAOE,MAAO,WACvB,CAAEF,MAAO,QAASE,MAAO,WACzB,CAAEF,MAAO,OAAQE,MAAO,WACxB,CAAEF,MAAO,OAAQE,MAAO,WACxB,CAAEF,MAAO,OAAQE,MAAO,WACxB,CAAEF,MAAO,SAAUE,MAAO,aAkBbI,MAff,WACE,OAEE,eAAC,EAAD,WACE,4CACA,sBAAKtC,UAAU,aAAf,UACE,cAAC,EAAD,CAASY,aAAc,KACvB,cAAC,EAAD,IACA,cAAC,EAAD,CAAamB,QAASM,W,MCjB9BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eaf1d3cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.Container}>{children}</div>;\n\nexport default Container;","const Controls = ({ onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      + 1\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      - 1\n    </button>\n  </div>\n);\n\nexport default Controls;","import React from 'react';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;","import React, { Component } from 'react';\nimport Controls from './Controls';\nimport Value from './Value';\nimport './Counter.css';\n\nclass Counter extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    //\n  };\n\n  state = {\n    value: this.props.initialValue,\n  };\n\n  handleIncrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  handleDecrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value - 1,\n    }));\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"Counter\">\n        <Value value={value} />\n        <Controls\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Counter;","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  render() {\n    const { visible } = this.state;\n\n    return (\n      <div className=\"Dropdown\">\n        <button\n          type=\"button\"\n          className=\"Dropdown__toggle\"\n          onClick={this.toggle}\n        >\n          {visible ? 'Hide' : 'Show'}\n        </button>\n\n        {visible && <div className=\"Dropdown__menu\">Drop-down menu</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","import React, { Component } from 'react';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    const optionClasses = ['ColorPicker__option'];\n\n    if (index === this.state.activeOptionIdx) {\n      optionClasses.push('ColorPicker__option--active');\n    }\n\n    return optionClasses.join(' ');\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <div>\n          {options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={this.makeOptionClassName(index)}\n              style={{ backgroundColor: color }}\n              onClick={() => this.setActiveIdx(index)}\n            ></button>\n          ))}\n            </div>\n            <p className=\"ColorPicker__descr\">Color selected: {label}</p>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;","import Container from './components/Container/Container';\nimport Counter from './components/Counter';\nimport Dropdown from './components/Dropdown';\nimport ColorPicker from './components/ColorPicker';\nimport './styles.css';\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#F44336' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'grey', color: '#607D8B' },\n  { label: 'pink', color: '#E91E63' },\n  { label: 'indigo', color: '#3F51B5' },\n];\n\nfunction App() {\n  return (\n    \n    <Container>\n      <h1>Hey there!</h1>\n      <div className=\"components\">\n        <Counter initialValue={10} />\n        <Dropdown />\n        <ColorPicker options={colorPickerOptions} />\n      </div>\n    </Container>\n    \n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}